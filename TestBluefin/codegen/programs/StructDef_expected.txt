; ModuleID = 'StructDef.bf'
source_filename = "StructDef.bf"

%Hey = type { i32, i32, float }
%Hi = type { i32, %Hey, i1 }

@blow = global i32 8
@here = global i32 0
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 0, void ()* @_VarDeclInitializations, i8* null }]

define internal void @internalGlobalVarDecl_here() {
entry:
  %loadtmp_blow = load i32, i32* @blow, align 4
  %addtmp = add i32 %loadtmp_blow, 10
  store i32 %addtmp, i32* @here, align 4
  ret void
}

define i32 @nice() {
entry:
  ret i32 1
}

define internal void @ctor_Hey(%Hey* %this) {
entry:
  %memPtr_a = getelementptr %Hey, %Hey* %this, i32 0, i32 0
  %loadtmp_a = load i32, i32* %memPtr_a, align 4
  %memPtr_b = getelementptr %Hey, %Hey* %this, i32 0, i32 1
  store i32 %loadtmp_a, i32* %memPtr_b, align 4
  %memPtr_a1 = getelementptr %Hey, %Hey* %this, i32 0, i32 0
  %loadtmp_a2 = load i32, i32* %memPtr_a1, align 4
  %multmp = mul i32 123, %loadtmp_a2
  %casttmp = sitofp i32 %multmp to float
  %memPtr_c = getelementptr %Hey, %Hey* %this, i32 0, i32 2
  store float %casttmp, float* %memPtr_c, align 4
  ret void
}

define internal void @ctor_Hi(%Hi* %this) {
entry:
  %memPtr_a = getelementptr %Hi, %Hi* %this, i32 0, i32 0
  %loadtmp_a = load i32, i32* %memPtr_a, align 4
  %loadtmp_blow = load i32, i32* @blow, align 4
  %cmpSGTtmp = icmp sgt i32 %loadtmp_a, %loadtmp_blow
  %memPtr_b = getelementptr %Hi, %Hi* %this, i32 0, i32 2
  store i1 %cmpSGTtmp, i1* %memPtr_b, align 1
  ret void
}

define void @foo() {
entry:
  %alloctmp_hey = alloca %Hey, align 8
  %alloctmp_hi = alloca %Hi, align 8
  ret void
}

define internal void @_VarDeclInitializations() {
entry:
  call void @internalGlobalVarDecl_here()
  ret void
}
